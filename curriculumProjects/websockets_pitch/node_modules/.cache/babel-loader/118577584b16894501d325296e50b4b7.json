{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Quincy\\\\Desktop\\\\tlmRepo\\\\curriculumProjects\\\\websockets_pitch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Quincy\\\\Desktop\\\\tlmRepo\\\\curriculumProjects\\\\websockets_pitch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Quincy\\\\Desktop\\\\tlmRepo\\\\curriculumProjects\\\\websockets_pitch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Quincy\\\\Desktop\\\\tlmRepo\\\\curriculumProjects\\\\websockets_pitch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Quincy\\\\Desktop\\\\tlmRepo\\\\curriculumProjects\\\\websockets_pitch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Quincy\\\\Desktop\\\\tlmRepo\\\\curriculumProjects\\\\websockets_pitch\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { getCurrentPot, sendNameToServer, sendPitchInToServer, sendGetOneToServer } from './socket';\nimport { getAName } from './usernames';\nimport SnackBarNotif from './SnackbarNotif';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.closeSnackbar = function () {\n      return _this.props.dispatch({\n        type: 'ANOTHER_ONE_PITCHED_IN'\n      });\n    };\n\n    _this.getOne = function () {\n      var _this$props = _this.props,\n          dispatch = _this$props.dispatch,\n          name = _this$props.name;\n      dispatch({\n        type: 'GET_ONE'\n      });\n      sendGetOneToServer(name);\n    };\n\n    _this.pitchIn = function () {\n      var _this$props2 = _this.props,\n          dispatch = _this$props2.dispatch,\n          name = _this$props2.name;\n      dispatch({\n        type: 'PITCH_IN'\n      });\n      sendPitchInToServer(name);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dispatch = this.props.dispatch;\n      var name = getAName();\n      getCurrentPot(dispatch);\n      dispatch({\n        type: 'ASSIGNED_USERNAME',\n        name: name\n      });\n      sendNameToServer(name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          pot = _this$props3.pot,\n          name = _this$props3.name,\n          names = _this$props3.names,\n          snackbarIsOpen = _this$props3.snackbarIsOpen,\n          mode = _this$props3.mode,\n          whoDidIt = _this$props3.whoDidIt;\n      return React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        style: {\n          textAlign: 'center'\n        },\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, pot)), React.createElement(Grid, {\n        style: {\n          textAlign: 'right',\n          padding: '10px'\n        },\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.pitchIn,\n        variant: \"raised\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"pitch in!\")), React.createElement(Grid, {\n        style: {\n          textAlign: 'left',\n          padding: '10px'\n        },\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.getOne,\n        variant: \"raised\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"get one!\")), React.createElement(Grid, {\n        style: {\n          textAlign: 'center'\n        },\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: '500px',\n          textAlign: 'center',\n          width: '300px',\n          border: '1px solod black',\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Your assigned username is\", ' ', React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, name), React.createElement(\"div\", {\n        style: {\n          padding: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Other members:\", names.length <= 1 ? React.createElement(\"div\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"No other members yet\") : names.map(function (member) {\n        return React.createElement(\"div\", {\n          style: {\n            display: name === member && 'none'\n          },\n          key: member,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, member);\n      })))), React.createElement(SnackBarNotif, {\n        mode: mode,\n        closeSnackbar: this.closeSnackbar,\n        name: whoDidIt,\n        snackbarIsOpen: snackbarIsOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    pot: state.pot,\n    name: state.name,\n    names: state.names,\n    snackbarIsOpen: state.snackbarIsOpen,\n    mode: state.mode,\n    whoDidIt: state.whoDidIt\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["C:\\Users\\Quincy\\Desktop\\tlmRepo\\curriculumProjects\\websockets_pitch\\src\\App.js"],"names":["React","Component","Grid","Button","connect","getCurrentPot","sendNameToServer","sendPitchInToServer","sendGetOneToServer","getAName","SnackBarNotif","App","closeSnackbar","props","dispatch","type","getOne","name","pitchIn","pot","names","snackbarIsOpen","mode","whoDidIt","textAlign","padding","height","width","border","display","color","length","map","member","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getCurrentPot,\r\n  sendNameToServer,\r\n  sendPitchInToServer,\r\n  sendGetOneToServer\r\n} from './socket';\r\nimport { getAName } from './usernames';\r\nimport SnackBarNotif from './SnackbarNotif';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    const name = getAName();\r\n    getCurrentPot(dispatch);\r\n    dispatch({ type: 'ASSIGNED_USERNAME', name });\r\n    sendNameToServer(name);\r\n  }\r\n\r\n  closeSnackbar = () => this.props.dispatch({ type: 'ANOTHER_ONE_PITCHED_IN' });\r\n\r\n  getOne = () => {\r\n    const { dispatch, name } = this.props;\r\n    dispatch({ type: 'GET_ONE' });\r\n    sendGetOneToServer(name);\r\n  };\r\n\r\n  pitchIn = () => {\r\n    const { dispatch, name } = this.props;\r\n    dispatch({ type: 'PITCH_IN' });\r\n    sendPitchInToServer(name);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      pot,\r\n      name,\r\n      names,\r\n      snackbarIsOpen,\r\n      mode,\r\n      whoDidIt\r\n    } = this.props;\r\n    return (\r\n      <Grid container justify=\"center\">\r\n        <Grid style={{ textAlign: 'center' }} item xs={12}>\r\n          <h1>{pot}</h1>\r\n        </Grid>\r\n        <Grid style={{ textAlign: 'right', padding: '10px' }} item xs={6}>\r\n          <Button onClick={this.pitchIn} variant=\"raised\" color=\"primary\">\r\n            pitch in!\r\n          </Button>\r\n        </Grid>\r\n        <Grid style={{ textAlign: 'left', padding: '10px' }} item xs={6}>\r\n          <Button onClick={this.getOne} variant=\"raised\" color=\"secondary\">\r\n            get one!\r\n          </Button>\r\n        </Grid>\r\n        <Grid style={{ textAlign: 'center' }} item xs={12}>\r\n          <div\r\n            style={{\r\n              height: '500px',\r\n              textAlign: 'center',\r\n              width: '300px',\r\n              border: '1px solod black',\r\n              display: 'inline-block'\r\n            }}\r\n          >\r\n            Your assigned username is{' '}\r\n            <span style={{ color: 'red' }}>{name}</span>\r\n            <div style={{ padding: '10px' }}>\r\n              Other members:\r\n              {names.length <= 1 ? (\r\n                <div style={{ color: 'red' }}>No other members yet</div>\r\n              ) : (\r\n                names.map(member => (\r\n                  <div\r\n                    style={{ display: name === member && 'none' }}\r\n                    key={member}\r\n                  >\r\n                    {member}\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <SnackBarNotif\r\n          mode={mode}\r\n          closeSnackbar={this.closeSnackbar}\r\n          name={whoDidIt}\r\n          snackbarIsOpen={snackbarIsOpen}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  pot: state.pot,\r\n  name: state.name,\r\n  names: state.names,\r\n  snackbarIsOpen: state.snackbarIsOpen,\r\n  mode: state.mode,\r\n  whoDidIt: state.whoDidIt\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}